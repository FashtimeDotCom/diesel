General
  * defer_to_thread-style behavior
  * Reactor.until clarification, vs. sleep/up, etc?
  * Fake raising an exception through the gen stack in cycle_all..
    if no one catches it, raise it back at the top-most level
  * @message support for "schedule this generator but don't block me"
  * Write tests, somehow, for all this fancy crap and the cluster code
  * Then, generalize and clean up!
  * cluster. broadcast, listen, call
  * Specialize the paxos database more for our purposes
  * Clean up logging and debug statements
  * Handle connection errors much more robustly on the cluster.. Connection object
    probably would be helped by the whole "raise through the fake stack" point

Clustering...

register()  -- register a mailbox
send()      -- send a single message to a mailbox
rpc()      -- block rpc style on a call to a mailbox

listen()    -- listen to a class of broadcast message
broadcast() -- send out a broadcast message
